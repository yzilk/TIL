●振り返り0719●

★name=""のところはsqlNameに合わせる
エンティティクラスのフィールド名はキャメルケースで記述(_書かない)
genevaluのgeneratorとseqgeneのnameは合わせる
seqGeneのseqNameはSQLのシーケンス名に一致させる
hoinColmunは手前が参照元のスネークの名前、後ろが参照先のキャメルケース

リポジトリインタフェスを作成　
JPAリポジトリを入れて、<合わせたほうのクラスをインポート,主キーの型＞

HTMLのth:textで参照先変数を表示させるには
Group型のgroupが作られているのでgroup.groupNameと記述を行う

★削除
HTMLにフォームでアクションを@でコントローラーに飛ばす
ボタンにIDを実装するnameで飛ぶものに名前つけて、バリューで*{id}でそれぞれのIDを入れる

コントロラでURLで/｛id｝の時はパスバリアブル
そうでないintegerで渡すときは引数integer Idだけでおけ
リポジトリ.deliteById(id)

★メソッドにリダイレクトとか書いてあるときはURL
パスとURL二つの使い方があるヨ...

★メンバーのインプットを表示させる、エラーチェック
メンバーの新規登録
・HTMLにフォーム、メソッドポストにしてアクションにパス
input textで　nameで送る変数名を設定

・フォームクラス作る
HTMLで設定したnameに準じてフォームでプライベートフィールドを設定
げったセッターも忘れず
(主キーは受け取らない？）

・コントローラで動かす
メインエンティティをnewしてフォームを渡す
→引数に対応してないので作りに行く、値をゲッターでセットする
→サブエンティティの引数対応もしてないので作りに行く、値をゲッターでゲットする
（どちらもデフォインつくっとこ）
）
----------------------------
・入力チェックをいれていく
フォームクラスに@sizeアノテーションや@notblankなどを記入していく
@max最大値　　@min最小値　＠notnull未入力だめ

・これをチェックするには
①コントローラーに動く処理にvalid
②formクラスできるときに身に行っちゃうんで初期表示と処理両方にモデアビューを付けます
③結果を保存したいので処理のほうにバインディングリザルト
④下でif resultはずエラーズ　
エラーならリダイレクトで戻して、


・ビューに実装する
アトリビュートで指定していない場合
HTMLではクラス名の小文字始まるをth：objechtの${}で使う

・プルダウンリストを作りたい（グループをfindAllしなあかん）
グループリポジトリを作る
リポジトリをコントロラでAutowする
List<Group> groups = groupRepository.findAll();
//グループ型のリストgroupsにぶち込み
HTMLで実装するセレクト＋オプションでeachを実施(名前はgroup.nameとかになるから注意)
